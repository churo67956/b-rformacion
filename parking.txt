
	
PROGRAM _INIT
	state := WAIT;
END_PROGRAM



PROGRAM _CYCLIC 
	
		IF state = WAIT THEN //estado de espera
			//ATENCION DE LAS PETICIONS DEL USUARIO
			IF di_residential_entry THEN//peticion de entrada como residente
				state := RESIDENT_ENTRY;//entrada de residente		
			ELSIF di_normal_entry THEN//peticion de entrada normal
				state := NORMAL_ENTRY;//entrada normal
			ELSIF di_residential_exit THEN//peticion de entrada como residente
				state := RESIDENT_EXIT;//entrada de residente		
			ELSIF di_normal_exit THEN//peticion de entrada normal
				state := NORMAL_EXIT;//entrada normal
			ELSIF di_reset THEN
				state := RESET;//entrada normal
			END_IF
			//FIN DE LA ATENCION A LAS PETICIONES DEL USUARIO
			
			
			//ACTUALIZAMOS LAS VARIABLES DE SALIDA
			do_full_rp := rpcounter = MAXRP;//bombilla parque lleno residencial
			do_full_np := npcounter = MAXRP;//bombilla parque lleno normal
			//FIN ACTUALIZACION DE LAS VARIABLES DE SALIDA
			
			//RESETEAMOS LAS VARIABLES DE ENTRADA
			di_residential_exit := FALSE;//resetamos el estado del boton de salida residencial
			di_normal_exit := FALSE;//resetamos el estado del boton de salida normal
			di_residential_entry := FALSE;//resetamos el estado del boton de entrada residencial
			di_normal_entry := FALSE;//resetamos el estado del boton de entrada normal
			//FIN RESETEAMOS LAS VARIABLES DE ENTRADA
			
			
			
		ELSIF state = RESIDENT_ENTRY THEN
			IF rpcounter < MAXRP THEN
				do_entryDoor := TRUE;//abre la puerta de entrada
				do_access := TRUE;//abre la puerta de acceso residencia
				rpncounter := rpcounter + 1;//incrementa en uno el numero de plazas ocupadas
				state := WAIT;
			ELSE
				state := NORMA_ENTRY;
			END_IF
		ELSIF state = NORMAL_ENTRY THEN
			IF npcounter < MAXRP THEN
				do_entryDoor := TRUE;//abre la puerta de entrada
				npcounter := npcounter + 1;//incrementa el numero de coches
			END_IF
			state := WAIT;
		ELSIF NORMAL_EXIT THEN
			IF npcounter > 0 THEN
				do_normalExitDoor := TRUE;//abre la puerta de entrada
				npcounter := npcounter - 1;
			END_IF
			state := WAIT;
		ELSIF state = RESIDENT_EXIT THEN
			IF rpcounter > 0 THEN
				do_residentExitDoor := TRUE;//abre la puerta de entrada
				rpcounter := rpcounter - 1;
			END_IF
			state := WAIT;
		ELSIF state = RESET THEN
			do_entryDoor := FALSE;
			do_access := FALSE;
			do_residentExitDoor := FALSE;
			do_normalExitDoor := FALSE;
		END_IF
	END_PROGRAM


